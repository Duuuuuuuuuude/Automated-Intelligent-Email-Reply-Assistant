{
  "Serilog": {
    // Verbose:     Anything and everything you might want to know about a running block of code.
    // Debug:       Internal system events that aren't necessarily observable from the outside.
    // Information: The lifeblood of operational intelligence - things happen.
    // Warning:     Service is degraded or endangered.
    // Error:       Functionality is unavailable, invariants are broken or data is lost.
    // Fatal:       If you have a pager, it goes off when one of these occurs.
    "MinimumLevel": "Debug", // Enum (Serilog.Events.LogEventLevel)
    "WriteTo": [
      {
        "Name": "Seq",
        "Args": {
          "serverUrl": "http://localhost:5341",
          "apiKey": "",
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj} (MachineName: {MachineName}, User: {EnvironmentUserName}, Env: {EnvironmentName}){NewLine}{Exception}"
        }
      }
    ],
    "Enrich": [ "WithMachineName", "WithEnvironmentUserName", "WithEnvironmentName" ],
    "Properties": {
      "AppName": "AIERA.Desktop.WinForms-Prod",
      "IsDeployed": "false"
    }
  },
  "MicrosoftEntra": {
    "AuthenticationConfig": {
      "PublicClientApplicationOptions": {
        /// <summary>
        /// Client ID (also known as App ID) of the application as registered in the
        /// application registration portal (https://aka.ms/msal-net-register-app)
        /// </summary>
        "ClientId": null,

        /// <summary>
        /// Tenant from which the application will allow users to sign it. This can be:
        /// a domain associated with a tenant, a GUID (tenant id), or a meta-tenant (e.g. consumers).
        /// This property is mutually exclusive with <see cref="AadAuthorityAudience"/>. If both
        /// are provided, an exception will be thrown.
        /// </summary>
        /// <remarks>The name of the property was chosen to ensure compatibility with AzureAdOptions
        /// in ASP.NET Core configuration files (even the semantics would be tenant)</remarks>
        "TenantId": null,

        /// <summary>
        /// Sign-in audience. This property is mutually exclusive with TenantId. If both
        /// are provided, an exception will be thrown.
        /// </summary>
        "AadAuthorityAudience": "None", // Enum (Microsoft.Identity.Client.AadAuthorityAudience)

        /// <summary>
        /// STS instance (for instance https://login.microsoftonline.com for the Azure public cloud).
        /// The name was chosen to ensure compatibility with AzureAdOptions in ASP.NET Core.
        /// This property is mutually exclusive with <see cref="AzureCloudInstance"/>. If both
        /// are provided, an exception will be thrown.
        /// </summary>
        "Instance": null,

        /// <summary>
        /// Specific instance in the case of Azure Active Directory.
        /// It allows users to use the enum instead of the explicit URL.
        /// This property is mutually exclusive with <see cref="Instance"/>. If both
        /// are provided, an exception will be thrown.
        /// </summary>
        "AzureCloudInstance": "None" // Enum (Microsoft.Identity.Client.AzureCloudInstance)

        /// <summary>
        /// This redirect URI needs to be registered in the app registration. See https://aka.ms/msal-net-register-app for
        /// details on which redirect URIs are defined by default by MSAL.NET and how to register them.
        /// Also use: <see cref="PublicClientApplicationBuilder.WithDefaultRedirectUri"/> which provides
        /// a good default for public client applications for all platforms.
        ///
        /// For web apps and web APIs, the redirect URI is computed from the URL where the application is running
        /// (for instance, <c>baseUrl//signin-oidc</c> for ASP.NET Core web apps).
        ///
        /// For daemon applications (confidential client applications using only the Client Credential flow
        /// that is calling <c>AcquireTokenForClient</c>), no reply URI is needed.
        /// </summary>
        /// <remarks>This is especially important when you deploy an application that you have initially tested locally;
        /// you then need to add the reply URL of the deployed application in the application registration portal
        /// </remarks>
        //"RedirectUri": null,

        /// <summary>
        /// The name of the calling application for telemetry purposes.
        /// </summary>
        //"ClientName": null,

        /// <summary>
        /// The version of the calling application for telemetry purposes.
        /// </summary>
        //"ClientVersion": null,

        /// <summary>
        /// Microsoft Identity specific OIDC extension that allows resource challenges to be resolved without interaction. 
        /// Allows configuration of one or more client capabilities, e.g. "llt"
        /// </summary>
        /// <remarks>
        /// MSAL will transform these into special claims request. See https://openid.net/specs/openid-connect-core-1_0-final.html#ClaimsParameter for
        /// details on claim requests.
        /// For more details see https://aka.ms/msal-net-claims-request
        /// </remarks>
        //"ClientCapabilities": null, IEnumerable<string>,

        /// <summary>
        /// Enables legacy ADAL cache serialization and deserialization.
        /// </summary>
        //"LegacyCacheCompatibilityEnabled": true,

        /// <summary>
        /// Service principal name for Kerberos Service Ticket.
        /// </summary>
        //"KerberosServicePrincipalName": null,

        /// <summary>
        /// Kerberos Service Ticket container to be used.
        /// </summary>
        //"TicketContainer": null Enum (Microsoft.Identity.Client.Kerberos.KerberosTicketContainer)
      },
      "AcquireTokenConfig": {
        // These scopes are used everytime we acquire a token for the user.
        "Scopes": [
          "https://outlook.office.com/IMAP.AccessAsUser.All",
          "https://outlook.office.com/SMTP.Send",
          "user.read",
          "email",
          "offline_access"
        ]
      },
      "LogOptions": {
        // Boolean used to enable/disable logging of
        // Personally Identifiable Information (PII).
        // PII logs are never written to default outputs like Console, Logcat or NSLog
        // Default is set to false, which ensures that your application is compliant with GDPR.
        // You can set it to true for advanced debugging requiring PII
        // If both WithLogging apis are set, the other one will override the this one.
        "EnablePiiLogging": false
      }
    }
  },
  "AIEmailClient": {
    "EmailReplyConfig": {
      // This is the subject suffix that will be added to the body of the ai reply email.
      "AIReplyBodyPrefix": "(This Email has been replied to automatically using AI.)",
      // The prefix to add to the subject of the replied email, eg. "Re:" for "Re: Subject" or "sv:" for "Sv: Subject".
      "SubjectRepliedPrefix": "Re:"
    }
  }
}
